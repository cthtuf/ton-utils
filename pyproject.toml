[tool.poetry]
name = "ton_utils"
version = "0.1.0"
description = ""
authors = ["Sergey Yarlov <sergey.yarlov@gmail.com>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
tontools = {git = "git@github.com:cthtuf/TonTools.git", rev = "big/fix-empty-jetton-description"}
tenacity = "^8.2.3"


[tool.poetry.group.dev.dependencies]
flake8 = "^6.1.0"
black = "^23.9.1"
isort = "^5.12.0"
autoflake = "^2.2.1"
pyupgrade = "^3.11.1"
pre-commit = "^3.4.0"
mypy = "^1.5.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"



[tool.black]
# https://github.com/psf/black
target-version = ["py311"]
line-length = 120
color = true

exclude = '''
/(
    \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | env
    | venv
    | .venv
)/
'''

[tool.isort]
# https://github.com/timothycrosley/isort/
py_version = 311

known_typing = ["typing", "types", "typing_extensions", "mypy", "mypy_extensions"]
sections = ["FUTURE", "TYPING", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "MAIN", "LOCALFOLDER"]
default_section = "FIRSTPARTY"
known_main = []
include_trailing_comma = true
profile = "black"
multi_line_output = 3
indent = 4
color_output = true


[tool.autoflake]
# return error code if changes are needed
check = false
# make changes to files instead of printing diffs
in-place = true
# drill down directories recursively
recursive = true
# exclude file/directory names that match these comma-separated globs
exclude = ".venv,venv"
# by default, only unused standard library imports are removed; specify a comma-separated list of additional
# modules/packages
#imports = "<IMPORTS>"
# expand wildcard star imports with undefined names; this only triggers if there is only one star import in
# the file; this is skipped if there are any uses of `__all__` or `del` in the file
expand-star-imports = false
# remove all unused imports (not just those from the standard library)
remove-all-unused-imports = true
# exclude __init__.py when removing unused imports
ignore-init-module-imports = true
# remove all duplicate keys in objects
remove-duplicate-keys = true
# remove unused variables
remove-unused-variables = false
# ignore all pass statements
ignore-pass-statements = false
# ignore pass statements after a newline ending on '"""'
ignore-pass-after-docstring = true


[tool.mypy]
# https://mypy.readthedocs.io/en/latest/config_file.html#using-a-pyproject-toml-file
python_version = 3.11
pretty = true
show_traceback = true
color_output = true
plugins = [
  "pydantic.mypy"
]

allow_redefinition = false
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
ignore_missing_imports = true
implicit_reexport = false
no_implicit_optional = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
strict_equality = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_unreachable = true
warn_unused_configs = true



[tool.flake8]
max-complexity = 6
statistics = true
max-line-length = 120
doctests = true
ignore = ["N999", "D100", "D104", "D106", "D401", "N999", "W503", "W504", "Q003", "B902", "P101", "P103", "N818",
    "E203", "E731", "B017", "SIM114",
]
no-accept-encodings = true
# Flake plugins:
accept-encodings = "utf-8"
